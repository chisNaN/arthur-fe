<!DOCTYPE html>
<html lang="en">
<head>
    <title>video</title>
    <link rel="icon" href="../images/icon.png" type="image/png" />
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <style>

        body
        {
            font-family: verdana;
            background-color: black;
            color: white;
        }

        audio {
            vertical-align: bottom;
            width: 10em;
        }

        video { vertical-align: top;max-width: 100%; }

        input {
            border: 1px solid #d9d9d9;
            border-radius: 1px;
            font-size: 2em;
            margin: .2em;
            width: 30%;
        }

        li {
            border-bottom: 1px solid rgb(189, 189, 189);
            border-left: 1px solid rgb(189, 189, 189);
            padding: .5em;
        }

        label {
            display: inline-block;
            width: 8em;
        }
        .guests
        {
            display: inline-block; border-radius: 3px; border: 1px solid #ccc; margin: 10px; padding: 5px
        }
    </style>
    <script>
        document.createElement('article');
        document.createElement('footer');
    </script>
    <script>
        function deleteVideo()
        {
            var oOutput = document.getElementById('return_from_deleteVideo');
            var oData = new FormData(document.forms.namedItem('for_delete'));

            var oReq = new XMLHttpRequest();

            oReq.open('POST', 'delete.php', true);

            oReq.onload = function(oEvent)
            {
                if (oReq.status === 200)
                {
                    oOutput.innerHTML = oReq.responseText;
                    setTimeout(function(){ location.reload(); }, 2000);

                }else
                {
                    oOutput.innerHTML = 'Error ' + oReq.status;
                }
            }

            oReq.send(oData);
        }

        function numVideos()
        {
            var oOutput = document.getElementById('num_videos');
            var oData = new FormData(document.forms.namedItem('for_delete'));

            var oReq = new XMLHttpRequest();

            oReq.open('POST', 'numVideos.php', true);

            oReq.onload = function(oEvent)
            {
                if (oReq.status === 200)
                {
                    oOutput.innerHTML = oReq.responseText;

                }else
                {
                    oOutput.innerHTML = 'Error ' + oReq.status;
                }
            }

            oReq.send(oData);
        }
    </script>
    <!-- script used for audio/video/gif recording -->
    <script src="RecordRTC.js"> </script>
</head>
<body onload="numVideos();">
<form name="for_delete">
    <input type="hidden" disabled id="delete-file" name="delete-file">
</form>
<div id="top" style="height: 450px;">
    <h2 style="text-align: center;">Videos (<span id="num_videos"></span> medias)</h2>
    <div style="float: left; margin: 5px;">
        Works only on Firefox, Opera and Chrome<br>
            Works better on Firefox
    </div>
        <div style="text-align:center; margin: 5px; float: left;">
            <video id="preview" controls style="height: 360px; width: 640px;"></video>

            <div style="text-align: center; margin-bottom: 0px;">
                <button id="record">Record</button>
                <button id="stop" disabled>Stop</button>
                <button id="delete">Delete video</button>
                <span id="return_from_deleteVideo"></span>
            </div>
        </div>
    <div style="margin: 5px;">
        This page uses WebRTC technology.<br> See the <a href="http://en.wikipedia.org/wiki/WebRTC" target="_blank" >Wiki</a>.
    </div>
</div>
    <hr style="margin: 0px;" />
    <div id="container"></div>
    <div style="padding:1em 2em;">
        NOT AVAILABLE!!!
    </div>
<script>
    // PostBlob method uses XHR2 and FormData to submit
    // recorded blob to the PHP server
    function PostBlob(blob, fileType, fileName)
    {
        // FormData
        var formData = new FormData();
        formData.append(fileType + '-filename', fileName);
        formData.append(fileType + '-blob', blob);

        // progress-bar
        var hr = document.createElement('hr');
        container.appendChild(hr);
        var strong = document.createElement('strong');
        strong.id = 'percentage';
        strong.innerHTML = fileType + ' upload progress: ';
        container.appendChild(strong);
        var progress = document.createElement('progress');
        container.appendChild(progress);

        // POST the Blob using XHR2
        xhr('save.php', formData, progress, percentage, function(fileURL)
        {
            container.appendChild(document.createElement('hr'));
            var mediaElement = document.createElement(fileType);

            var source = document.createElement('source');
            var href = location.href.substr(0, location.href.lastIndexOf('/') + 1);
            source.src = href + fileURL;

            if(fileType == 'video') source.type = 'video/webm; codecs="vp8, vorbis"';
            if(fileType == 'audio') source.type = !!navigator.mozGetUserMedia ? 'audio/ogg': 'audio/wav';

            mediaElement.appendChild(source);
            mediaElement.style.cssText = 'width: 320px; height: 240px;';
            mediaElement.controls = true;

            container.appendChild(mediaElement);

            mediaElement.play();

            progress.parentNode.removeChild(progress);
            strong.parentNode.removeChild(strong);
            hr.parentNode.removeChild(hr);
            location.reload();

        });
    }

    var record = document.getElementById('record');
    var stop = document.getElementById('stop');
    var deleteFiles = document.getElementById('delete');

    var audio = document.querySelector('audio');

    var recordVideo = document.getElementById('record-video');
    var preview = document.getElementById('preview');

    var container = document.getElementById('container');

    // if you want to record only audio on chrome
    // then simply set "isFirefox=true"
    var isFirefox = !!navigator.mozGetUserMedia;
    isFirefox = true;

    navigator.getUserMedia = (navigator.getUserMedia ||
                              navigator.webkitGetUserMedia ||
                              navigator.mozGetUserMedia ||
                              navigator.msGetUserMedia);

    var recordAudio, recordVideo;

    record.onclick = function()
    {
        record.disabled = true;
        navigator.getUserMedia({
            audio: true,
            video: true
        }, function(stream) {
            preview.src = window.URL.createObjectURL(stream);
            preview.play();

            // var legalBufferValues = [256, 512, 1024, 2048, 4096, 8192, 16384];
            // sample-rates in at least the range 22050 to 96000.
            recordAudio = RecordRTC(stream, {
                //bufferSize: 16384,
                //sampleRate: 45000,
                onAudioProcessStarted: function() {
                    if(!isFirefox) {
                        recordVideo.startRecording();
                    }
                }
            });

            if(isFirefox) {
                recordAudio.startRecording();
            }

            if(!isFirefox) {
                recordVideo = RecordRTC(stream, {
                    type: 'video'
                });
                recordAudio.startRecording();
            }

            stop.disabled = false;
        }, function(error) {
            alert( JSON.stringify (error, null, '\t') );
        });
    };

    var fileName;

    stop.onclick = function()
    {
        record.disabled = false;
        stop.disabled = true;

        preview.src = '';

        fileName = Math.round(Math.random() * 99999999) + 99999999;

        if(!isFirefox)
        {
            recordAudio.stopRecording();
            PostBlob(recordAudio.getBlob(), 'audio', fileName + '.wav');

        }else
        {
            recordAudio.stopRecording( function(url) {
                preview.src = url;
                PostBlob(recordAudio.getBlob(), 'video', fileName + '.webm');
            });
        }

        if(!isFirefox)
        {
            recordVideo.stopRecording();
            PostBlob(recordVideo.getBlob(), 'video', fileName + '.webm');
        }
        deleteFiles.disabled = false;
    };

    deleteFiles.onclick = function() {
        deleteVideo();
    };

    function deleteAudioVideoFiles()
    {
        deleteFiles.disabled = true;
        if (!fileName) return;
        var formData = new FormData();
        formData.append('delete-file', fileName);
        xhr('delete.php', formData, null, null, function(response) {
            console.log(response);
        });
        fileName = null;
        container.innerHTML = '';
    }

    function xhr(url, data, progress, percentage, callback)
    {
        var request = new XMLHttpRequest();
        request.onreadystatechange = function() {
            if (request.readyState == 4 && request.status == 200) {
                callback(request.responseText);
            }
        };

        if(url.indexOf('delete.php') == -1) {
            request.upload.onloadstart = function() {
                percentage.innerHTML = 'Upload started...';
            };

            request.upload.onprogress = function(event) {
                progress.max = event.total;
                progress.value = event.loaded;
                percentage.innerHTML = 'Upload Progress ' + Math.round(event.loaded / event.total * 100) + "%";
            };

            request.upload.onload = function() {
                percentage.innerHTML = 'Saved!';
            };
        }

        request.open('POST', url);
        request.send(data);
    }
</script>
<script type="text/javascript" src="../inc/LS.js"></script>
</body>
</html>